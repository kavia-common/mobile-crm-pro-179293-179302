{"is_source_file": true, "format": "Kotlin", "description": "This file defines repository classes for various entities (Contact, Deal, Task, Note) in an Android app, providing methods for CRUD operations and data retrieval using an AppDatabase.", "external_files": ["org/example/app/data/AppDatabase.kt", "org/example/app/data/entity/Contact.kt", "org/example/app/data/entity/Deal.kt", "org/example/app/data/entity/Task.kt", "org/example/app/data/entity/Note.kt"], "external_methods": ["AppDatabase.get(Context): AppDatabase", "ContactDao.getAll(): Flow<List<Contact>>", "ContactDao.insert(Contact): suspend", "ContactDao.update(Contact): suspend", "ContactDao.delete(Contact): suspend", "DealDao.getAll(): Flow<List<Deal>>", "DealDao.insert(Deal): suspend", "DealDao.update(Deal): suspend", "DealDao.delete(Deal): suspend", "TaskDao.getAll(): Flow<List<Task>>", "TaskDao.insert(Task): suspend", "TaskDao.update(Task): suspend", "TaskDao.delete(Task): suspend", "NoteDao.notesFor(String, Long): flow", "NoteDao.insert(Note): suspend", "NoteDao.update(Note): suspend", "NoteDao.delete(Note): suspend"], "published": ["ContactRepository", "DealRepository", "TaskRepository", "NoteRepository"], "classes": [{"name": "ContactRepository", "description": "Repository class for managing Contact entities, providing CRUD operations and retrieval of all contacts."}, {"name": "DealRepository", "description": "Repository class for managing Deal entities, providing CRUD operations and retrieval of all deals."}, {"name": "TaskRepository", "description": "Repository class for managing Task entities, providing CRUD operations and retrieval of all tasks."}, {"name": "NoteRepository", "description": "Repository class for managing Note entities, providing CRUD operations and retrieval based on parent type and ID."}], "methods": [{"name": "getAll", "description": "Retrieves all entities of the respective type as a Flow."}, {"name": "add", "description": "Asynchronously inserts a new entity into the database."}, {"name": "update", "description": "Asynchronously updates an existing entity in the database."}, {"name": "delete", "description": "Asynchronously deletes an entity from the database."}, {"name": "notesFor", "description": "Retrieves notes associated with a specific parent entity."}], "calls": ["AppDatabase.get", "dao.getAll", "dao.insert", "dao.update", "dao.delete", "dao.notesFor"], "search-terms": ["Kotlin repository classes", "Android Room DAO repositories", "ContactRepository", "DealRepository", "TaskRepository", "NoteRepository", "coroutines Flow", "suspend functions for database", "notesFor method"], "state": 2, "file_id": 15, "knowledge_revision": 35, "git_revision": "", "hash": "0e7e831eedc2c1d7b8e517ea169242cc", "format-version": 4, "code-base-name": "crm_mobile_frontend", "filename": "crm_mobile_frontend/app/src/main/kotlin/org/example/app/domain/Repositories.kt", "revision_history": [{"35": ""}]}